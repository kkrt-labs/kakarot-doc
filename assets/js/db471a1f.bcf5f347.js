"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[448],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},o=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,u=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),s=c(n),m=i,g=s["".concat(u,".").concat(m)]||s[m]||d[m]||l;return n?r.createElement(g,a(a({ref:t},o),{},{components:n})):r.createElement(g,a({ref:t},o))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=m;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[s]="string"==typeof e?e:i,a[1]=p;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8154:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const l={},a="Modexp utils",p={unversionedId:"Utils/Modexp/modexp_utils",id:"Utils/Modexp/modexp_utils",title:"Modexp utils",description:"Internal",source:"@site/docs/Utils/Modexp/modexp_utils.md",sourceDirName:"Utils/Modexp",slug:"/Utils/Modexp/modexp_utils",permalink:"/kakarot-doc/docs/Utils/Modexp/modexp_utils",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/Utils/Modexp/modexp_utils.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Alt bn128 g1",permalink:"/kakarot-doc/docs/Utils/Alt_bn128/alt_bn128_g1"},next:{title:"Eth transaction",permalink:"/kakarot-doc/docs/Utils/eth_transaction"}},u={},c=[{value:"Internal",id:"internal",level:2},{value:"<code>uint256_mod_exp</code>",id:"uint256_mod_exp",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>uint256_mod_exp_recursive_call</code>",id:"uint256_mod_exp_recursive_call",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>calculate_mod_exp_gas</code>",id:"calculate_mod_exp_gas",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<code>get_felt_bitlength</code>",id:"get_felt_bitlength",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<code>get_u256_bitlength</code>",id:"get_u256_bitlength",level:3},{value:"Implicit arguments",id:"implicit-arguments-4",level:4},{value:"Explicit arguments",id:"explicit-arguments-4",level:4},{value:"Returns",id:"returns-4",level:4}],o={toc:c};function s(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"modexp-utils"},"Modexp utils"),(0,i.kt)("h2",{id:"internal"},"Internal"),(0,i.kt)("h3",{id:"uint256_mod_exp"},(0,i.kt)("inlineCode",{parentName:"h3"},"uint256_mod_exp")),(0,i.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr (felt)  \n")),(0,i.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"x (Uint256)  \ny (Uint256)  \np (Uint256)  \n")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"remainder (Uint256)  \n")),(0,i.kt)("h3",{id:"uint256_mod_exp_recursive_call"},(0,i.kt)("inlineCode",{parentName:"h3"},"uint256_mod_exp_recursive_call")),(0,i.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr (felt)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"x (Uint256)  \ny (Uint256)  \nres (Uint256)  \np (Uint256)  \n")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"r_x (Uint256)  \nr_y (Uint256)  \nr_res (Uint256)  \n")),(0,i.kt)("h3",{id:"calculate_mod_exp_gas"},(0,i.kt)("inlineCode",{parentName:"h3"},"calculate_mod_exp_gas")),(0,i.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr (felt)  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"b_size (Uint256)  \ne_size (Uint256)  \nm_size (Uint256)  \nb (Uint256)  \ne (Uint256)  \nm (Uint256)  \n")),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"gas_cost (felt)  \n")),(0,i.kt)("h3",{id:"get_felt_bitlength"},(0,i.kt)("inlineCode",{parentName:"h3"},"get_felt_bitlength")),(0,i.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"x (felt)  \n")),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"felt  \n")),(0,i.kt)("h3",{id:"get_u256_bitlength"},(0,i.kt)("inlineCode",{parentName:"h3"},"get_u256_bitlength")),(0,i.kt)("h4",{id:"implicit-arguments-4"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-4"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"x (Uint256)  \n")),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"felt  \n")))}s.isMDXComponent=!0}}]);