"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[451],{3905:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),u=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||l;return a?n.createElement(g,i(i({ref:t},o),{},{components:a})):n.createElement(g,i({ref:t},o))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9861:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const l={},i="Library",s={unversionedId:"kakarot/accounts/eoa/aa/library",id:"kakarot/accounts/eoa/aa/library",title:"Library",description:"Internal",source:"@site/docs/kakarot/accounts/eoa/aa/library.md",sourceDirName:"kakarot/accounts/eoa/aa",slug:"/kakarot/accounts/eoa/aa/library",permalink:"/kinto-un/docs/kakarot/accounts/eoa/aa/library",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/kakarot/accounts/eoa/aa/library.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Externally owned account",permalink:"/kinto-un/docs/kakarot/accounts/eoa/aa/externally_owned_account"},next:{title:"Deployer",permalink:"/kinto-un/docs/kakarot/accounts/eoa/deployer/"}},c={},u=[{value:"Internal",id:"internal",level:2},{value:"<code>validate</code>",id:"validate",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"<code>is_valid_eth_tx</code>",id:"is_valid_eth_tx",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>is_valid_eth_signature</code>",id:"is_valid_eth_signature",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>is_valid_signature</code>",id:"is_valid_signature",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"Returns",id:"returns-2",level:4}],o={toc:u};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"library"},"Library"),(0,r.kt)("h2",{id:"internal"},"Internal"),(0,r.kt)("h3",{id:"validate"},(0,r.kt)("inlineCode",{parentName:"h3"},"validate")),(0,r.kt)("p",null,"checks if tx is signed and valid for each call"),(0,r.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nbitwise_ptr (BitwiseBuiltin*)  \nrange_check_ptr  \n")),(0,r.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"eth_address (felt): The ethereum address owning this account  \ncall_array_len (felt): The length of the call array  \ncall_array (CallArray*): The call array  \ncalldata_len (felt): The length of the calldata  \ncalldata (felt*): The calldata  \n")),(0,r.kt)("h3",{id:"is_valid_eth_tx"},(0,r.kt)("inlineCode",{parentName:"h3"},"is_valid_eth_tx")),(0,r.kt)("p",null,"decodes evm tx and validates it"),(0,r.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nbitwise_ptr (BitwiseBuiltin*)  \nrange_check_ptr  \n")),(0,r.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"eth_address (felt): The ethereum address owning the account  \ncalldata_len (felt): The lenght of the calldata  \ncalldata (felt*): The calldata  \n")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"is_valid (felt)  \n")),(0,r.kt)("h3",{id:"is_valid_eth_signature"},(0,r.kt)("inlineCode",{parentName:"h3"},"is_valid_eth_signature")),(0,r.kt)("p",null,"returns 1 (true) and does not fail if the signature is valid"),(0,r.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nbitwise_ptr (BitwiseBuiltin*)  \nrange_check_ptr  \n")),(0,r.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"msg_hash (Uint256)  \nr (Uint256)  \ns (Uint256)  \nv (felt): , r, s The signature  \neth_address (felt): The ethereum address to compare the signature  \n")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"is_valid (felt)  \n")),(0,r.kt)("h3",{id:"is_valid_signature"},(0,r.kt)("inlineCode",{parentName:"h3"},"is_valid_signature")),(0,r.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nbitwise_ptr (BitwiseBuiltin*)  \nrange_check_ptr  \n")),(0,r.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"_eth_address (felt)  \nhash_len (felt)  \nhash (felt*)  \nsignature_len (felt)  \nsignature (felt*)  \n")),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"is_valid (felt)  \n")))}p.isMDXComponent=!0}}]);