"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[930],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},o="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),o=c(n),d=i,h=o["".concat(u,".").concat(d)]||o[d]||m[d]||a;return n?r.createElement(h,l(l({ref:t},s),{},{components:n})):r.createElement(h,l({ref:t},s))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[o]="string"==typeof e?e:i,l[1]=p;for(var c=2;c<a;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8893:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={},l="Sha256",p={unversionedId:"Kakarot/Precompiles/sha256",id:"Kakarot/Precompiles/sha256",title:"Sha256",description:"Internal",source:"@site/docs/Kakarot/Precompiles/sha256.md",sourceDirName:"Kakarot/Precompiles",slug:"/Kakarot/Precompiles/sha256",permalink:"/docs/Kakarot/Precompiles/sha256",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/Kakarot/Precompiles/sha256.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ripemd160",permalink:"/docs/Kakarot/Precompiles/ripemd160"},next:{title:"Blockhash registry",permalink:"/docs/Kakarot/Registry/Blockhash/blockhash_registry"}},u={},c=[{value:"Internal",id:"internal",level:2},{value:"<code>run</code>",id:"run",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>sha256</code>",id:"sha256-1",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>_sha256_chunk</code>",id:"_sha256_chunk",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"<code>sha256_inner</code>",id:"sha256_inner",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"<code>_sha256_input</code>",id:"_sha256_input",level:3},{value:"Implicit arguments",id:"implicit-arguments-4",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"<code>_finalize_sha256_inner</code>",id:"_finalize_sha256_inner",level:3},{value:"Implicit arguments",id:"implicit-arguments-5",level:4},{value:"Explicit arguments",id:"explicit-arguments-4",level:4},{value:"<code>finalize_sha256</code>",id:"finalize_sha256",level:3},{value:"Implicit arguments",id:"implicit-arguments-6",level:4},{value:"Explicit arguments",id:"explicit-arguments-5",level:4}],s={toc:c};function o(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sha256"},"Sha256"),(0,i.kt)("h2",{id:"internal"},"Internal"),(0,i.kt)("h3",{id:"run"},(0,i.kt)("inlineCode",{parentName:"h3"},"run")),(0,i.kt)("p",null,"Run the precompile."),(0,i.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"_address (felt)  \ninput_len (felt): The length of input array.  \ninput (felt*): The input array.  \n")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"output_len (felt): The output length.  \noutput (felt*): The output array.  \ngas_used (felt): The gas usage of precompile.  \n")),(0,i.kt)("h3",{id:"sha256-1"},(0,i.kt)("inlineCode",{parentName:"h3"},"sha256")),(0,i.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nsha256_ptr (felt*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"data (felt*)  \nn_bytes (felt)  \n")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"output (felt*)  \n")),(0,i.kt)("h3",{id:"_sha256_chunk"},(0,i.kt)("inlineCode",{parentName:"h3"},"_sha256_chunk")),(0,i.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nsha256_start (felt*)  \nstate (felt*)  \noutput (felt*)  \n")),(0,i.kt)("h3",{id:"sha256_inner"},(0,i.kt)("inlineCode",{parentName:"h3"},"sha256_inner")),(0,i.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nsha256_ptr (felt*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"data (felt*)  \nn_bytes (felt)  \ntotal_bytes (felt)  \n")),(0,i.kt)("h3",{id:"_sha256_input"},(0,i.kt)("inlineCode",{parentName:"h3"},"_sha256_input")),(0,i.kt)("h4",{id:"implicit-arguments-4"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nsha256_ptr (felt*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"input (felt*)  \nn_bytes (felt)  \nn_words (felt)  \npad_chunk (felt)  \n")),(0,i.kt)("h3",{id:"_finalize_sha256_inner"},(0,i.kt)("inlineCode",{parentName:"h3"},"_finalize_sha256_inner")),(0,i.kt)("h4",{id:"implicit-arguments-5"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-4"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sha256_ptr (felt*)  \nn (felt)  \nround_constants (felt*)  \n")),(0,i.kt)("h3",{id:"finalize_sha256"},(0,i.kt)("inlineCode",{parentName:"h3"},"finalize_sha256")),(0,i.kt)("h4",{id:"implicit-arguments-6"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-5"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sha256_ptr_start (felt*)  \nsha256_ptr_end (felt*)  \n")))}o.isMDXComponent=!0}}]);