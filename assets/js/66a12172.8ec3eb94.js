"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[746],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<l;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6141:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},i="Kakarot",s={unversionedId:"Kakarot/kakarot",id:"Kakarot/kakarot",title:"Kakarot",description:"Constructor",source:"@site/docs/Kakarot/kakarot.md",sourceDirName:"Kakarot",slug:"/Kakarot/",permalink:"/docs/Kakarot/",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/Kakarot/kakarot.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Contract account",permalink:"/docs/Kakarot/Accounts/Contract/contract_account"}},o={},c=[{value:"Constructor",id:"constructor",level:2},{value:"<code>constructor</code>",id:"constructor-1",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"View",id:"view",level:2},{value:"<code>get_blockhash_registry</code>",id:"get_blockhash_registry",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>get_native_token</code>",id:"get_native_token",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>get_deploy_fee</code>",id:"get_deploy_fee",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<code>compute_starknet_address</code>",id:"compute_starknet_address",level:3},{value:"Implicit arguments",id:"implicit-arguments-4",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<code>eth_call</code>",id:"eth_call",level:3},{value:"Implicit arguments",id:"implicit-arguments-5",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"Returns",id:"returns-4",level:4},{value:"External",id:"external",level:2},{value:"<code>set_blockhash_registry</code>",id:"set_blockhash_registry",level:3},{value:"Implicit arguments",id:"implicit-arguments-6",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"<code>set_native_token</code>",id:"set_native_token",level:3},{value:"Implicit arguments",id:"implicit-arguments-7",level:4},{value:"Explicit arguments",id:"explicit-arguments-4",level:4},{value:"<code>set_deploy_fee</code>",id:"set_deploy_fee",level:3},{value:"Implicit arguments",id:"implicit-arguments-8",level:4},{value:"Explicit arguments",id:"explicit-arguments-5",level:4},{value:"<code>deploy_externally_owned_account</code>",id:"deploy_externally_owned_account",level:3},{value:"Implicit arguments",id:"implicit-arguments-9",level:4},{value:"Explicit arguments",id:"explicit-arguments-6",level:4},{value:"Returns",id:"returns-5",level:4},{value:"<code>eth_send_transaction</code>",id:"eth_send_transaction",level:3},{value:"Implicit arguments",id:"implicit-arguments-10",level:4},{value:"Explicit arguments",id:"explicit-arguments-7",level:4},{value:"Returns",id:"returns-6",level:4}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kakarot"},"Kakarot"),(0,a.kt)("h2",{id:"constructor"},"Constructor"),(0,a.kt)("h3",{id:"constructor-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"constructor")),(0,a.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"owner (felt)  \nnative_token_address_ (felt)  \ncontract_account_class_hash_  \nexternally_owned_account_class_hash  \naccount_proxy_class_hash  \ndeploy_fee  \n")),(0,a.kt)("h2",{id:"view"},"View"),(0,a.kt)("h3",{id:"get_blockhash_registry"},(0,a.kt)("inlineCode",{parentName:"h3"},"get_blockhash_registry")),(0,a.kt)("p",null,"Get the blockhash registry used by kakarot."),(0,a.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"address (felt): The address of the current blockhash registry contract.  \n")),(0,a.kt)("h3",{id:"get_native_token"},(0,a.kt)("inlineCode",{parentName:"h3"},"get_native_token")),(0,a.kt)("p",null,"Get the native token address"),(0,a.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"native_token_address (felt): The address of the native token  \n")),(0,a.kt)("h3",{id:"get_deploy_fee"},(0,a.kt)("inlineCode",{parentName:"h3"},"get_deploy_fee")),(0,a.kt)("p",null,"Get the deploy fee for deploying EOA on Kakarot."),(0,a.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deploy_fee (felt): The deploy fee which is returned to a deployer for deploying accounts.  \n")),(0,a.kt)("h3",{id:"compute_starknet_address"},(0,a.kt)("inlineCode",{parentName:"h3"},"compute_starknet_address")),(0,a.kt)("p",null,"Compute the starknet address of a contract given its EVM address"),(0,a.kt)("h4",{id:"implicit-arguments-4"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"evm_address (felt): The EVM address of the contract  \n")),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"contract_address (felt): The starknet address of the contract  \n")),(0,a.kt)("h3",{id:"eth_call"},(0,a.kt)("inlineCode",{parentName:"h3"},"eth_call")),(0,a.kt)("p",null,"The eth_call function as described in the spec,\nsee ",(0,a.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call"},"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call"),"\nThis is a view only function, meaning that it doesn't make any state change."),(0,a.kt)("h4",{id:"implicit-arguments-5"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,a.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"to (felt): The address the transaction is directed to.  \ngas_limit (felt): Integer of the gas provided for the transaction execution  \ngas_price (felt): Integer of the gas price used for each paid gas  \nvalue (felt): Integer of the value sent with this transaction  \ndata_len (felt): The length of the data  \ndata (felt*): Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI in the Solidity documentation  \n")),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"return_data_len (felt): The length of the return_data  \nreturn_data (felt*): An array of returned felts  \n")),(0,a.kt)("h2",{id:"external"},"External"),(0,a.kt)("h3",{id:"set_blockhash_registry"},(0,a.kt)("inlineCode",{parentName:"h3"},"set_blockhash_registry")),(0,a.kt)("p",null,"Set the blockhash registry used by kakarot."),(0,a.kt)("h4",{id:"implicit-arguments-6"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"blockhash_registry_address_ (felt): The address of the new blockhash registry contract.  \n")),(0,a.kt)("h3",{id:"set_native_token"},(0,a.kt)("inlineCode",{parentName:"h3"},"set_native_token")),(0,a.kt)("p",null,"Set the native token used by kakarot"),(0,a.kt)("h4",{id:"implicit-arguments-7"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"explicit-arguments-4"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"native_token_address_ (felt): The address of the native token  \n")),(0,a.kt)("h3",{id:"set_deploy_fee"},(0,a.kt)("inlineCode",{parentName:"h3"},"set_deploy_fee")),(0,a.kt)("p",null,"Set the deploy fee for deploying EOA on Kakarot."),(0,a.kt)("h4",{id:"implicit-arguments-8"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,a.kt)("h4",{id:"explicit-arguments-5"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deploy_fee_ (felt): The new deploy fee.  \n")),(0,a.kt)("h3",{id:"deploy_externally_owned_account"},(0,a.kt)("inlineCode",{parentName:"h3"},"deploy_externally_owned_account")),(0,a.kt)("p",null,"Deploy a new externally owned account."),(0,a.kt)("h4",{id:"implicit-arguments-9"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,a.kt)("h4",{id:"explicit-arguments-6"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"evm_address (felt): The evm address that is mapped to the newly deployed starknet contract address.  \n")),(0,a.kt)("h4",{id:"returns-5"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"starknet_contract_address (felt): The newly deployed starknet contract address.  \n")),(0,a.kt)("h3",{id:"eth_send_transaction"},(0,a.kt)("inlineCode",{parentName:"h3"},"eth_send_transaction")),(0,a.kt)("p",null,"The eth_send_transaction function as described in the spec,\nsee ",(0,a.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction"},"https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction")),(0,a.kt)("h4",{id:"implicit-arguments-10"},"Implicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,a.kt)("h4",{id:"explicit-arguments-7"},"Explicit arguments"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"to (felt): The address the transaction is directed to.  \ngas_limit (felt): Integer of the gas provided for the transaction execution  \ngas_price (felt): Integer of the gas price used for each paid gas  \nvalue (felt): Integer of the value sent with this transaction  \ndata_len (felt): The length of the data  \ndata (felt*): Hash of the method signature and encoded parameters. For details see Ethereum Contract ABI in the Solidity documentation  \n")),(0,a.kt)("h4",{id:"returns-6"},"Returns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"return_data_len (felt): The length of the return_data  \nreturn_data (felt*): An array of returned felts  \n")))}d.isMDXComponent=!0}}]);