"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[95],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>k});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,k=u["".concat(o,".").concat(d)]||u[d]||m[d]||l;return r?n.createElement(k,p(p({ref:t},s),{},{components:r})):n.createElement(k,p({ref:t},s))}));function k(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,p=new Array(l);p[0]=d;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a[u]="string"==typeof e?e:i,p[1]=a;for(var c=2;c<l;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1684:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const l={},p="Precompiles",a={unversionedId:"Kakarot/Precompiles/precompiles",id:"Kakarot/Precompiles/precompiles",title:"Precompiles",description:"Internal",source:"@site/docs/Kakarot/Precompiles/precompiles.md",sourceDirName:"Kakarot/Precompiles",slug:"/Kakarot/Precompiles/",permalink:"/docs/Kakarot/Precompiles/",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/Kakarot/Precompiles/precompiles.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"System operations",permalink:"/docs/Kakarot/Instructions/system_operations"},next:{title:"Blake2f",permalink:"/docs/Kakarot/Precompiles/blake2f"}},o={},c=[{value:"Internal",id:"internal",level:2},{value:"<code>is_precompile</code>",id:"is_precompile",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>_exec_precompile</code>",id:"_exec_precompile",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>unknown_precompile</code>",id:"unknown_precompile",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"<code>not_implemented_precompile</code>",id:"not_implemented_precompile",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"<code>not_whitelisted_precompile</code>",id:"not_whitelisted_precompile",level:3},{value:"Implicit arguments",id:"implicit-arguments-4",level:4},{value:"Explicit arguments",id:"explicit-arguments-4",level:4}],s={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"precompiles"},"Precompiles"),(0,i.kt)("h2",{id:"internal"},"Internal"),(0,i.kt)("h3",{id:"is_precompile"},(0,i.kt)("inlineCode",{parentName:"h3"},"is_precompile")),(0,i.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"range_check_ptr  \n")),(0,i.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"address (felt)  \n")),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"felt  \n")),(0,i.kt)("h3",{id:"_exec_precompile"},(0,i.kt)("inlineCode",{parentName:"h3"},"_exec_precompile")),(0,i.kt)("p",null,"Executes associated function of precompiled address."),(0,i.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"address (felt): The precompile address.  \ninput_len (felt): The length of the input array.  \ninput (felt*): The input array.  \n")),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"output_len (felt): The output length.  \noutput (felt*): The output array.  \ngas_used (felt): The gas usage of precompile.  \n")),(0,i.kt)("h3",{id:"unknown_precompile"},(0,i.kt)("inlineCode",{parentName:"h3"},"unknown_precompile")),(0,i.kt)("p",null,"A placeholder for precompile that are not implemented yet."),(0,i.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"address (felt): The address.  \n_input_len (felt): The length of the input array.  \n_input (felt*): The input array.  \n")),(0,i.kt)("h3",{id:"not_implemented_precompile"},(0,i.kt)("inlineCode",{parentName:"h3"},"not_implemented_precompile")),(0,i.kt)("p",null,"A placeholder for precompile that are not implemented yet."),(0,i.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"address (felt): The address.  \n_input_len (felt): The length of the input array.  \n_input (felt*): The input array.  \n")),(0,i.kt)("h3",{id:"not_whitelisted_precompile"},(0,i.kt)("inlineCode",{parentName:"h3"},"not_whitelisted_precompile")),(0,i.kt)("p",null,"A placeholder for precompile that are not implemented yet."),(0,i.kt)("h4",{id:"implicit-arguments-4"},"Implicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,i.kt)("h4",{id:"explicit-arguments-4"},"Explicit arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"address (felt): The address.  \n_input_len (felt): The length of the input array.  \n_input (felt*): The input array.  \n")))}u.isMDXComponent=!0}}]);