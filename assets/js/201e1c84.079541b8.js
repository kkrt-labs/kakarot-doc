"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[978],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=l,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:l,o[1]=i;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6762:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),l=(r(7294),r(3905));const a={},o="Rlp",i={unversionedId:"Utils/rlp",id:"Utils/rlp",title:"Rlp",description:"Internal",source:"@site/docs/Utils/rlp.md",sourceDirName:"Utils",slug:"/Utils/rlp",permalink:"/kakarot-doc/docs/Utils/rlp",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/Utils/rlp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Alt bn128 g1",permalink:"/kakarot-doc/docs/Utils/Alt_bn128/alt_bn128_g1"}},p={},c=[{value:"Internal",id:"internal",level:2},{value:"<code>decode</code>",id:"decode",level:3},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"<code>encode_list</code>",id:"encode_list",level:3},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>encode_felt</code>",id:"encode_felt",level:3},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>encode_byte_array</code>",id:"encode_byte_array",level:3},{value:"Explicit arguments",id:"explicit-arguments-3",level:4},{value:"Returns",id:"returns-2",level:4}],s={toc:c};function d(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"rlp"},"Rlp"),(0,l.kt)("h2",{id:"internal"},"Internal"),(0,l.kt)("h3",{id:"decode"},(0,l.kt)("inlineCode",{parentName:"h3"},"decode")),(0,l.kt)("p",null,"decodes RLP data see this: ",(0,l.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"},"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp")),(0,l.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_len (felt): The lenght of the bytes  \ndata (felt*): The pointer to the first byte in array  \nitems (Item*): A pointer to an empty array of items, will be filled with found items  \n")),(0,l.kt)("h3",{id:"encode_list"},(0,l.kt)("inlineCode",{parentName:"h3"},"encode_list")),(0,l.kt)("p",null,"encodes data into an rlp list"),(0,l.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_len (felt): The lenght of the bytes to copy from  \ndata (felt*): The pointer to the first byte in the array to copy from  \nrlp (felt*): The pointer receiving the rlp encoded list  \n")),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"rlp_len (felt)  \n")),(0,l.kt)("h3",{id:"encode_felt"},(0,l.kt)("inlineCode",{parentName:"h3"},"encode_felt")),(0,l.kt)("p",null,"encodes felt into an rlp item"),(0,l.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"item (felt): The felt that is encoded into rlp  \nrlp_len (felt): The length of the rlp array  \nrlp (felt*): The pointer receiving the rlp encoded felt  \n")),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"rlp_len (felt)  \n")),(0,l.kt)("h3",{id:"encode_byte_array"},(0,l.kt)("inlineCode",{parentName:"h3"},"encode_byte_array")),(0,l.kt)("p",null,"encodes byte array into an rlp element"),(0,l.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"byte_array_len: The length of the bytes to copy from  \nbyte_array (felt*): The pointer to the first byte in the array to copy from  \nrlp_len (felt)  \nrlp (felt*): The pointer receiving the rlp encoded list  \n")),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"rlp_len (felt)  \n")))}d.isMDXComponent=!0}}]);